- provide(:content_cache, 'no-cache')
.catastrophe-info.hidden(catastrophe=[@lat, @lng])
.page-container(ng-controller='catastrophesController as ctsCtrl')
  .simulation
    button(type="button" ng-click='ctsCtrl.startSimulation()')
      | Iniciar simulation
  .catastrophe-container(ng-init='catastrophe = ctsCtrl.catastrophe')
    .main-container
      ul.top-items
        li.li-1.affected-people.element.space-around
          .li-text.flex-column.space-around.height-100
            h1.li-main.center.font-size-60
              | {{ ctsCtrl.catastrophe.affected_people }}
            span
              |  Personas afectadas
          = image_tag('avatar.svg', class: 'item-image')
        li.li-2.affected-surface.element.space-around
          .li-text.flex-column.space-around.height-100
            h1.li-main.center.font-size-60
              | {{ ctsCtrl.catastrophe.affected_surface }}
            span
              |  Metros cuadrados
          = image_tag('location.svg', class: 'item-image')
        li.li-3.affected-drones.element.space-around
          .li-text.flex-column.space-around.height-100
            h1.li-main.center.font-size-60
              | {{ ctsCtrl.catastrophe.drones }}
            span
              |  Drones patrullando la zona
          = image_tag('drone.svg', class: 'item-image')
        li.li-4.affected-drones.element.space-around
          .li-text.flex-column.space-around.height-100
            h1.li-main.center.font-size-60
              | {{ ctsCtrl.catastrophe.agents_online }}
            span
              |  Agentes monitoreando el sistema
          = image_tag('telemarketer.svg', class: 'item-image')
      = render('percent_items', people_total: '{{ ctsCtrl.catastrophe.affected_people }}', \
                                people_rescued: '{{ ctsCtrl.catastrophe.people_rescued }}', \
                                building_total: '{{ ctsCtrl.catastrophe.affected_buildings }}', \
                                building_rescued: '{{ ctsCtrl.catastrophe.building_rescued }}', \
                                surface_covered: '{{ ctsCtrl.catastrophe.surface_covered }}', \
                                total_surface: '{{ ctsCtrl.catastrophe.affected_surface }}')
      .catastrophe-main
        .dont-care-for-name
          .catastrophe.element.background-blue
            h2.title-boxed
              | {{ ctsCtrl.catastrophe.name }}
            .stuff
              p.description-paragraph
                strong
                  | Ubicación:
                span.inner-span
                  | {{ ctsCtrl.catastrophe.location || 'Delridge, Seattle' }}
              p.location-paragraph(style="background: #fafafa;")
                strong
                  |  Latitud:
                span.inner-span
                  |  {{ ctsCtrl.catastrophe.lat }}.
                strong.inner-span
                  |  Longitud:
                span.inner-span
                  = " {{ ctsCtrl.catastrophe.lng }}."
              p.description-paragraph
                strong
                  | Descripción:
                span.inner-span
                  | {{ ctsCtrl.catastrophe.description }}
          .other-information.element.background-blue
            h2.title-boxed
              | Actividad reciente
            ul#recent-information
              li.recent-item(ng-repeat="info in ctsCtrl.catastrophe.drone_reports")
                p
                  | {{ info.message }}
                a.drone-image(ng-href="{{info.image_url}}")
                  | Ver imagen
                button.delete-item(href="#" ng-click="ctsCtrl.deleteReport(info.id)")
                  | REPORTAR
        .map-container.element
          h2.map-header.title-boxed
            | Zonas afectadas
          #map(
            style="height: 500px; width: 100%;"
          )
    script(
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNAuqoz8rTBk9q9RLHlcIFu-FTXA-M-M4&libraries=geometry,drawing,visualization"
      defer="true"
    )
    javascript:
      $(document).on('turbolinks:load', function() {
        var coords = JSON.parse($('.catastrophe-info').attr('catastrophe'));

        function initMap() {
          map = new google.maps.Map(document.getElementById('map'), {
            zoom: 14,
            center: new google.maps.LatLng(coords[0], coords[1]),
            mapTypeId: 'terrain'
          });

          buildLine('s~wwFnbmbMvjFiCqR|sSixDse@r@uvKxxNiCpvI_{K');
          buildLine('{w}wFbhkcMxhUkp@s@ioFs@arI}sNflA_LwkJvpEpVbGjbQV@hdSsGqkDpaMeu]srX');
          buildLine('mm`wF`fraMgaC`vSi|Evg@unAovJxoIvrMghAh_Lk}D}_Ds@qmv@{dDzsSwiDncWj_F|x@|]{yEyxHrV');
          buildLine('h_|vG|dzzK_EfjB??be@gC{@kZyRdBfAw`@pSkDkBpN|JQm@wn@oLhCyCfJgJ??ae@{fB}mG');
          buildLine('xw{vGbdd{KfAcjAlU?wBm[}StAImLvR_G~A_MaOfBwBqNqM?yIwIlIuPrA~MpPsAhKeAb@dI`LyC~A`nBxLgn@c@my@fMuA|Gx}C');
          buildLine('h{_wGzm_{Kgs@kDwHqV`UtA~AfJnVqGwE}ZeJnMjHPcFpGo\{KcCw}@zIr@dA~r@vHxCvuBkuA');
          buildLine('hd`wGvyb{Kw`AkK}SwX??}Dkx@_ByJjUcAb@rHiKPbC|q@dPbWkEoz@hKeAyCcWlLgB~Axv@oFtHnb@tPbeDaG');

          var markerPositions = [{ lat: -45.860173,  lng: -67.4779824 },
                                 { lat: -45.8599754, lng: -67.514157 },
                                 { lat: -45.8749621, lng: -67.5065844},
                                 { lat: -45.8699597,  lng: -67.5003637 }];
          var markerDelays = [2000, 14000, 6500, 10500];
          markerPositions.forEach(function(elem, index) { addMarkerWithTimeout(elem, markerDelays[index]) });
        }

        function addMarkerWithTimeout(position, timeout) {
          window.setTimeout(function() {
            new google.maps.Marker({
              position: position,
              map: map,
              animation: google.maps.Animation.DROP
            });
          }, timeout);
        }

        function buildLine(pathString) {
          function animateCircle(line) {
            var count = 0;
            window.setInterval(function() {
              count = (count + 0.03) % 600;

              var icons = line.get('icons');
              icons[0].offset = (count / 2) + '%';
              line.set('icons', icons);
            }, 20);
          }

          var path = google.maps.geometry.encoding.decodePath(pathString);
          var droneSymbol = {
              path: "M111.25,222.803c12.77,0,25.305-2.154,37.259-6.403c3.903-1.387,5.942-5.676,4.556-9.579     c-1.388-3.903-5.678-5.94-9.579-4.555c-10.337,3.674-21.183,5.537-32.235,5.537c-53.072,0-96.25-43.178-96.25-96.25     c0-53.072,43.178-96.25,96.25-96.25c53.072,0,96.25,43.178,96.25,96.25c0,10.754-1.765,21.32-5.244,31.404     c-1.352,3.916,0.728,8.185,4.644,9.536c3.914,1.35,8.186-0.728,9.536-4.644c4.024-11.662,6.064-23.874,6.064-36.297     c0-61.343-49.906-111.25-111.25-111.25S0,50.209,0,111.553S49.906,222.803,111.25,222.803z M207.314,317.675c-3.909,1.37-5.968,5.648-4.599,9.558c3.576,10.211,5.39,20.917,5.39,31.82     c0,53.072-43.178,96.25-96.25,96.25c-53.072,0-96.25-43.178-96.25-96.25c0-53.072,43.178-96.25,96.25-96.25     c10.9,0,21.605,1.813,31.82,5.39c3.912,1.369,8.188-0.69,9.557-4.6c1.369-3.909-0.69-8.188-4.6-9.557     c-11.812-4.136-24.185-6.233-36.777-6.233c-61.344,0-111.25,49.907-111.25,111.25s49.906,111.25,111.25,111.25     s111.25-49.907,111.25-111.25c0-12.595-2.097-24.969-6.233-36.778C215.503,318.365,211.224,316.305,207.314,317.675z M359.355,247.803c-12.593,0-24.966,2.097-36.777,6.233c-3.909,1.369-5.969,5.648-4.6,9.557     c1.368,3.91,5.649,5.968,9.557,4.6c10.215-3.577,20.92-5.39,31.82-5.39c53.072,0,96.25,43.178,96.25,96.25     c0,53.072-43.178,96.25-96.25,96.25c-53.072,0-96.25-43.178-96.25-96.25c0-10.9,1.813-21.606,5.39-31.82     c1.369-3.909-0.69-8.188-4.6-9.557c-3.91-1.368-8.188,0.691-9.557,4.6c-4.137,11.812-6.233,24.185-6.233,36.777     c0,61.343,49.906,111.25,111.25,111.25s111.25-49.907,111.25-111.25S420.699,247.803,359.355,247.803z M263.896,152.93c3.909-1.369,5.969-5.648,4.6-9.557c-3.576-10.214-5.39-20.92-5.39-31.82     c0-53.072,43.178-96.25,96.25-96.25c53.072,0,96.25,43.178,96.25,96.25s-43.178,96.25-96.25,96.25     c-10.901,0-21.607-1.813-31.82-5.39c-3.909-1.368-8.188,0.691-9.557,4.6c-1.369,3.91,0.689,8.188,4.6,9.558     c11.81,4.136,24.184,6.233,36.777,6.233c61.344,0,111.25-49.907,111.25-111.25S420.699,0.303,359.355,0.303     s-111.25,49.907-111.25,111.25c0,12.592,2.097,24.966,6.233,36.777C255.707,152.24,259.987,154.3,263.896,152.93z M332.272,363.789c0.54,3.094,1.595,6.012,3.08,8.66l-33.426,33.427c-2.929,2.929-2.929,7.678,0,10.606     c1.465,1.464,3.385,2.197,5.304,2.197c1.919,0,3.839-0.732,5.304-2.197l33.426-33.426c3.967,2.223,8.535,3.497,13.397,3.497     c15.163,0,27.5-12.336,27.5-27.5c0-4.862-1.273-9.43-3.496-13.397l33.427-33.427c2.929-2.929,2.929-7.678,0-10.606     c-2.929-2.929-7.677-2.929-10.607,0l-33.427,33.426c-2.649-1.484-5.566-2.54-8.66-3.08l-82.101-82.101     c1.448-4.601,2.231-9.493,2.231-14.565c0-5.072-0.784-9.965-2.232-14.566l82.101-82.101c3.094-0.54,6.011-1.595,8.66-3.08     l33.427,33.426c1.465,1.464,3.385,2.197,5.304,2.197c1.919,0,3.839-0.732,5.304-2.197c2.929-2.929,2.929-7.678,0-10.606     l-33.427-33.427c2.223-3.967,3.496-8.535,3.496-13.397c0-15.164-12.337-27.5-27.5-27.5c-4.862,0-9.429,1.273-13.397,3.496     l-33.426-33.426c-2.93-2.929-7.678-2.929-10.607,0c-2.929,2.929-2.929,7.678,0,10.606l33.426,33.427     c-1.484,2.649-2.54,5.566-3.08,8.66l-82.101,82.101c-4.601-1.448-9.493-2.231-14.565-2.231c-5.072,0-9.965,0.784-14.565,2.231     l-82.101-82.101c-0.54-3.094-1.595-6.011-3.08-8.66l33.427-33.427c2.929-2.929,2.929-7.678,0-10.606     c-2.929-2.929-7.677-2.929-10.607,0l-33.427,33.426c-3.967-2.223-8.535-3.496-13.397-3.496c-15.163,0-27.5,12.336-27.5,27.5     c0,4.862,1.273,9.43,3.496,13.397l-33.426,33.427c-2.929,2.929-2.929,7.678,0,10.606c1.465,1.464,3.385,2.197,5.304,2.197     s3.839-0.732,5.304-2.197l33.426-33.426c2.649,1.484,5.567,2.54,8.661,3.08l82.101,82.101c-1.448,4.601-2.232,9.493-2.232,14.566     c0,5.072,0.783,9.964,2.231,14.565l-82.101,82.102c-3.094,0.54-6.012,1.596-8.661,3.08l-33.426-33.426     c-2.929-2.929-7.677-2.929-10.607,0c-2.929,2.929-2.929,7.678,0,10.606l33.426,33.427c-2.223,3.967-3.496,8.535-3.496,13.397     c0,15.164,12.337,27.5,27.5,27.5c4.862,0,9.43-1.273,13.397-3.497l33.427,33.426c1.465,1.464,3.385,2.197,5.304,2.197     s3.839-0.732,5.304-2.197c2.929-2.929,2.929-7.678,0-10.606l-33.427-33.427c1.484-2.648,2.54-5.565,3.079-8.659l82.101-82.102     c4.601,1.448,9.493,2.232,14.566,2.232s9.965-0.784,14.566-2.232L332.272,363.789z M359.355,346.553     c3.434,0,6.547,1.393,8.809,3.642c2.299,2.311,3.691,5.425,3.691,8.858c0,6.892-5.607,12.5-12.5,12.5     c-3.434,0-6.547-1.393-8.809-3.642c-2.299-2.311-3.691-5.425-3.691-8.858C346.855,352.16,352.462,346.553,359.355,346.553z      M350.497,102.745c2.311-2.299,5.425-3.691,8.858-3.691c6.893,0,12.5,5.607,12.5,12.5c0,3.434-1.393,6.547-3.642,8.809     c-2.311,2.299-5.425,3.691-8.858,3.691c-6.893,0-12.5-5.607-12.5-12.5C346.855,108.12,348.248,105.006,350.497,102.745z      M345.958,335.049c-4.438,2.487-8.119,6.167-10.606,10.606l-71.103-71.104c4.057-2.969,7.637-6.549,10.606-10.606     L345.958,335.049z M335.352,124.951c2.487,4.438,6.168,8.119,10.606,10.606l-71.103,71.103     c-2.969-4.057-6.549-7.637-10.606-10.606L335.352,124.951z M111.855,124.053c-3.434,0-6.547-1.393-8.809-3.642     c-2.299-2.311-3.691-5.425-3.691-8.858c0-6.893,5.608-12.5,12.5-12.5c3.434,0,6.547,1.393,8.809,3.642     c2.299,2.311,3.691,5.425,3.691,8.858C124.355,118.446,118.748,124.053,111.855,124.053z M125.253,135.556     c4.438-2.487,8.118-6.167,10.605-10.606l71.104,71.104c-4.057,2.969-7.637,6.549-10.606,10.606L125.253,135.556z      M120.713,367.862c-2.311,2.299-5.425,3.691-8.858,3.691c-6.892,0-12.5-5.608-12.5-12.5c0-3.434,1.393-6.547,3.642-8.809     c2.311-2.299,5.425-3.691,8.858-3.691c6.893,0,12.5,5.607,12.5,12.5C124.355,362.487,122.962,365.6,120.713,367.862z      M135.859,345.656c-2.487-4.438-6.168-8.119-10.606-10.606l71.103-71.104c2.969,4.057,6.549,7.637,10.606,10.606L135.859,345.656     z M235.605,268.92c-18.536,0-33.616-15.081-33.616-33.617c0-18.537,15.08-33.617,33.616-33.617     c18.536,0,33.617,15.081,33.617,33.617S254.141,268.92,235.605,268.92z",
            strokeColor: '#000',
            fillColor: '#000',
            scale: 0.075,
            strokeWeight: 1.5,
            anchor: new google.maps.Point(260,260),
          };
          var lineSymbol = {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 8,
            strokeColor: '#393'
          };
          var line = new google.maps.Polyline({
            path: path,
            icons: [{
              icon: droneSymbol,
              offset: '50%'
            }],
            map: map,
            strokeWeight: 0,
          });
          animateCircle(line);
          return line;
        }

        initMap();
      });
